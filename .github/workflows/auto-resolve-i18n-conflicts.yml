name: Auto Resolve i18n Conflicts

# Trigger conditions for the workflow
on:
  # Trigger on PR events when translation files are modified
  pull_request:
    types: [opened, synchronize]
    paths:
      - 'src/locales/**/*.po'
  
  # Manual trigger: Allows users to manually run the workflow from GitHub UI
  # This is useful when conflicts arise after PR creation due to main branch changes
  workflow_dispatch:
    inputs:
      pr_number:
        description: 'PR number to check and resolve i18n conflicts (leave empty to check all open PRs)'
        required: false
        type: string
      force_run:
        description: 'Force run even if no conflicts detected initially'
        required: false
        type: boolean
        default: false
  
  # Auto-trigger when main branch receives pushes to translation files
  # This will check all open PRs for potential new conflicts
  push:
    branches: [main]
    paths:
      - 'src/locales/**/*.po'

jobs:
  # Job for handling individual PR conflicts (triggered by PR events)
  auto-resolve-i18n-conflicts:
    runs-on: ubuntu-latest
    # Only run for PR events, and only if there are conflicts or force_run is enabled
    if: |
      (github.event_name == 'pull_request' && contains(github.event.pull_request.mergeable_state, 'dirty')) ||
      (github.event_name == 'workflow_dispatch' && github.event.inputs.pr_number != '' && github.event.inputs.pr_number != null) ||
      (github.event_name == 'workflow_dispatch' && github.event.inputs.force_run == 'true')

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0
          # For manual dispatch, checkout the specific PR branch
          ref: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.pr_number != '' && format('refs/pull/{0}/head', github.event.inputs.pr_number) || github.ref }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.17.1'
          cache: 'npm'

      - name: Install dependencies
        run: npm install

      - name: Configure Git
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

      - name: Check for i18n conflicts
        id: check-conflicts
        run: |
          # Try to merge main branch to detect conflicts
          git fetch origin main
          if git merge-tree $(git merge-base HEAD origin/main) HEAD origin/main | grep -q "src/locales.*\.po"; then
            echo "i18n_conflicts=true" >> $GITHUB_OUTPUT
            echo "Found i18n conflicts in .po files"
          else
            echo "i18n_conflicts=false" >> $GITHUB_OUTPUT
            echo "No i18n conflicts detected"
          fi

      - name: Auto resolve i18n conflicts
        if: steps.check-conflicts.outputs.i18n_conflicts == 'true'
        run: |
          # Make script executable
          chmod +x scripts/auto-resolve-i18n-conflicts.sh

          # Attempt to merge main branch
          git merge origin/main || true

          # Run auto-resolve script if there are conflicts
          if git status --porcelain | grep -q "^UU.*\.po$"; then
            echo "Running auto-resolve script for i18n conflicts..."
            ./scripts/auto-resolve-i18n-conflicts.sh
            
            # Commit the resolved conflicts
            git add .
            git commit -m "[AUTO] Auto-resolve i18n conflicts"
            
            # Push the changes back to the PR branch
            git push origin HEAD
            
            echo "âœ… i18n conflicts have been automatically resolved and committed."
          else
            echo "No merge conflicts found in .po files"
          fi

      - name: Comment on PR
        if: steps.check-conflicts.outputs.i18n_conflicts == 'true'
        uses: actions/github-script@v6
        with:
          script: |
            const prNumber = context.issue.number || '${{ github.event.inputs.pr_number }}';
            github.rest.issues.createComment({
              issue_number: prNumber,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'ðŸ¤– **Auto-resolved i18n conflicts**\n\nI detected merge conflicts in translation files (.po) and automatically resolved them using the `auto-resolve-i18n-conflicts.sh` script.\n\nThe resolved files have been committed to this PR. Please review the changes and ensure the translations are correct.'
            })

  # Job for checking all open PRs when main branch is updated
  check-all-open-prs:
    runs-on: ubuntu-latest
    # Only run when main branch receives pushes or manual dispatch without specific PR
    if: |
      github.event_name == 'push' ||
      (github.event_name == 'workflow_dispatch' && (github.event.inputs.pr_number == '' || github.event.inputs.pr_number == null))
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.17.1'
          cache: 'npm'

      - name: Install dependencies
        run: npm install

      - name: Configure Git
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

      - name: Get all open PRs and check for i18n conflicts
        uses: actions/github-script@v6
        with:
          script: |
            // Get all open pull requests
            const { data: pullRequests } = await github.rest.pulls.list({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open'
            });
            
            console.log(`Found ${pullRequests.length} open pull requests`);
            
            // Check each PR for potential i18n conflicts
            for (const pr of pullRequests) {
              console.log(`\n--- Checking PR #${pr.number}: ${pr.title} ---`);
              
              try {
                // Check if PR has translation file changes
                const { data: files } = await github.rest.pulls.listFiles({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  pull_number: pr.number
                });
                
                const hasI18nFiles = files.some(file => 
                  file.filename.includes('src/locales/') && file.filename.endsWith('.po')
                );
                
                if (!hasI18nFiles) {
                  console.log(`PR #${pr.number} has no translation file changes, skipping`);
                  continue;
                }
                
                console.log(`PR #${pr.number} has translation file changes, checking for conflicts...`);
                
                // Check if PR has conflicts with main branch
                const { data: comparison } = await github.rest.repos.compareCommits({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  base: 'main',
                  head: pr.head.sha
                });
                
                // If there are potential conflicts, trigger the resolution workflow
                if (comparison.status === 'diverged' || comparison.behind_by > 0) {
                  console.log(`PR #${pr.number} may have conflicts, triggering resolution workflow...`);
                  
                  // Trigger the auto-resolve workflow for this specific PR
                  await github.rest.actions.createWorkflowDispatch({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    workflow_id: 'auto-resolve-i18n-conflicts.yml',
                    ref: 'main',
                    inputs: {
                      pr_number: pr.number.toString(),
                      force_run: 'true'
                    }
                  });
                  
                  console.log(`âœ… Triggered conflict resolution for PR #${pr.number}`);
                } else {
                  console.log(`PR #${pr.number} is up to date with main branch`);
                }
                
              } catch (error) {
                console.error(`Error checking PR #${pr.number}:`, error.message);
              }
            }
            
            console.log('\nâœ… Finished checking all open PRs for i18n conflicts');
